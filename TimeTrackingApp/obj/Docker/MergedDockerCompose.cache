name: dockercompose4910512511249513398
services:
  messagebroker:
    container_name: messagebroker
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
    hostname: ecommerce-mq
    image: rabbitmq:management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    restart: always
  timetrackingapp.api:
    build:
      context: D:\.NET\TestProject\TimeTrackingApp
      dockerfile: TimeTrackingApp.API/Dockerfile
    depends_on:
      trackingdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__Database: Server=trackingdb;Port=5432;Database=TrackingDb;User Id=sa;Password=SwN12345678;Include Error Detail=true
    image: timetrackingappapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Admin\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Admin\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  trackingdb:
    container_name: trackingdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: SwN12345678
    image: mcr.microsoft.com/mssql/server
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose4910512511249513398_default